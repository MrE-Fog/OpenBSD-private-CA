#!/bin/ksh

#	$Telecomlobby: setup_node,v 0.1 11/3/2021 21:01:04 taglio$
#
#sshd: https:/github.com/vedetta-com/vedetta/blob/master/src/usr/local/share/doc/vedetta/OpenSSH_Principals.md	
#ssl: https://web.archive.org/web/20201028144550/https://www.pbdigital.org/openbsd/libressl/2019/10/14/offline-root-certificate-authority-openbsd.html
#geodata: https://github.com/Redama-la-red-que-te-ama/radio-mobile-linux	


set -o errexit
set -o nounset


PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin:/root/Bin
SYSDIR="/etc/ssh/ca"
SSLDIR="/etc/ssl/ca"
UID=$(id -u)

if [[ $UID -ne 0 ]]; then
	print $0 "you've got to run $0 as UID=0 \n"
	exit 1
fi

if [[ $# -eq 0 ]]; then
	print $0 "have to be used with the following options \
			\n \
			\ninstall -> create SSH and SSL private CA \
			\nverify  -> printout and verify certificates \
			\nreset   -> reset filesystem hierarchy and delete certificates and keys \
			\nusers   -> create users certificates. Default taglio \
			\nkrl	  -> creating SSH KRL revocation list \
			\n"
	
	exit 1
fi

function error_exit {
    echo "${app}: ${1:-"Unknown Error"}" 1>&2
    exit 1
}

app=$(basename $0)
hostname=$(hostname -s)
domainname=$(hostname | sed "s/$(hostname -s).//")
appdir=$(pwd)
publicip=$(ifconfig egress | grep inet |grep -v inet6 | cut -d ' ' -f2)

INSTALL=/usr/bin/install
RCCTL=/usr/sbin/rcctl
USERADD=/usr/sbin/useradd
PKG_ADD=/usr/sbin/pkg_add
PFCTL=/sbin/pfctl
SH=/bin/ksh
GETENT=/usr/bin/getent
SSHKEYGEN=/usr/bin/ssh-keygen
DOAS=/usr/bin/doas
WGET=/usr/local/bin/wget
CHOWN=/sbin/chown
FIND=/usr/bin/find
MKDIR=/bin/mkdir
SSL=/usr/bin/openssl

case $1 in
	"install")
		echo -n "creating SSH CA \n"
		$MKDIR -pm 755 $SYSDIR/{,host}
		cd "src$SYSDIR/host"
		cp -R * $SYSDIR/host/
		echo -n "creating SSH CA key with password \
			\nplease use keypass to store it
			\n"
		$SSHKEYGEN -t ed25519 -C "$hostname@$domainname" -f $SYSDIR/ssh_ca_ed25519
		echo -n "put the same password for:\n"
		$FIND . -type d | awk 'NR>2 {print last} {last=$0}' | cut -d / -f2
		$FIND . -type d | awk 'NR>2 {print last} {last=$0}' | cut -d / -f2 | xargs -I {} \
			$SSHKEYGEN -s $SYSDIR/ssh_ca_ed25519 -h -I {} -n {} -V always:forever -z 1 $SYSDIR/host/{}/ssh_host_ed25519_key.pub
		echo -n "creating SSL private CA key structure \
			\n"
		cp -Rp src/etc/ssl/ca/ $SSLDIR
		cd "$SSLDIR/ca.telecom.lobby/"
		$SSL rand -hex 16 > db/serial
		$SSL req -new -config root-ca.cnf -out root-ca.csr -keyout private/root-ca.key  
		$SSL ca -selfsign -config root-ca.cnf -in root-ca.csr -out root-ca.crt -extensions ca_ext 
		echo -n "enable httpd OSCP vhost \
			\n"
		cd $appdir
		find . -type f | xargs -I {} sed -i "s/\/PUBLICIP\//$publicip/g" {}
		cp src/etc/http* /etc
		$RCCTL enable httpd
		$RCCTL start httpd
		cd "$SSLDIR/ca.telecom.lobby/"
		mkdir /var/www/htdocs/ocsp.telecom.lobby
		cp root-ca.crt /var/www/htdocs/ocsp.telecom.lobby
		;;
	"verify")
		cd $SYSDIR
		$FIND . -type d | awk 'NR>2 {print last} {last=$0}' | cut -d / -f2 | xargs -I {} \
		$SSHKEYGEN -L -f $SYSDIR/host/{}/ssh_host_ed25519_key-cert.pub
		$SSHKEYGEN -Q -f $SYSDIR/ssh_ca.krl $SYSDIR/user/taglio/id_ed25519-cert.pub
		;;
	"reset")
		rm -rf {$SYSDIR,$SSLDIR}
		$MKDIR -pm 755 $SYSDIR/host
		$MKDIR -pm 755 $SYSDIR/user/taglio
		;;
	"users")
		cd src/etc/ssh/ca/user/taglio/
		$INSTALL -o root -g wheel -m 0750 -b id_ed25519.pub $SYSDIR/user/taglio/ 
		echo -n "creating user certificate using wheel group \n"
		$SSHKEYGEN -s $SYSDIR/ssh_ca_ed25519 -I taglio -n wheel \
        		-O no-x11-forwarding -V +31d -z 2 $SYSDIR/user/taglio/id_ed25519.pub
		
	"krl")
		$SSHKEYGEN -k -f $SYSDIR/ssh_ca.krl -s $SYSDIR/ssh_ca_ed25519.pub -z 2 $SYSDIR/user/taglio/id_ed25519-cert.pub
		;;
	*)
		print $0 "unknown option \n"
		exit 1
		;;
esac

return 

